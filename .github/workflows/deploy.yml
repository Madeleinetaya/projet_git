# .github/workflows/deploy.yml
name: Deploy Application to Server

on:
  push:
    branches:
      - main # Déclenche le workflow sur un push vers la branche 'main'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    # Si vous avez créé un environnement spécifique dans GitHub (ex: 'production'), ajoutez la ligne suivante:
    # environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Ansible and Community Docker collection
        run: |
          python -m pip install --upgrade pip
          pip install ansible
          ansible-galaxy collection install community.docker

      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.ANSIBLE_INVENTORY_HOST }} >> ~/.ssh/known_hosts # -H pour ajouter uniquement le hachage
        shell: bash

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Utilisez DOCKERHUB_USERNAME
          password: ${{ secrets.DOCKERHUB_TOKEN }}   # Utilisez DOCKERHUB_TOKEN

      # --- Construire et Pousser les Images Docker ---
      # Ces étapes sont essentielles pour le CD si vos images changent avec votre code
      - name: Build and push database image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mydatabase:latest ./database
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mydatabase:latest
        working-directory: .

      - name: Build and push simple-api image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/simple-api:latest ./simple-api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/simple-api:latest
        working-directory: .

      - name: Build and push http-server image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/http-server:latest ./http-server
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/http-server:latest
        working-directory: .
      # -----------------------------------------------

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i "${{ secrets.ANSIBLE_INVENTORY_HOST }}," \
            --private-key=~/.ssh/id_rsa \
            -u admin \
            playbook.yml
        working-directory: ./ansible # Assurez-vous que votre playbook.yml est ici
