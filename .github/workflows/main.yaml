name: CI devops 2025

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test-backend:
    runs-on: ubuntu-24.04

    steps:
      # Step 1: Checkout code from the repository
      - uses: actions/checkout@v4

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Compile and test the application
      - name: Build and test with Maven
        run: mvn clean verify --file simple-api/pom.xml

      # Step 4: SonarCloud Scan
      - name: SonarCloud Scan
        run: >
          mvn -B verify sonar:sonar
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          --file ./simple-api/pom.xml
        env:
          # Set environment variable for SonarCloud Token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-docker-image:
    # This job REQUIRES the 'test-backend' job to complete successfully.
    # Images will only be built and pushed if the code compiles and tests pass.
    needs: test-backend
    runs-on: ubuntu-24.04
    steps:
      # Step 1: Checkout source code (necessary to access Dockerfiles)
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Log in to DockerHub (necessary to push images)
      # This step is executed only if the workflow is triggered by a push to the 'main' branch.
      # DOCKERHUB_USERNAME and DOCKERHUB_TOKEN secrets must be configured in GitHub repository settings.
      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main' # Condition to execute this step only on the main branch
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      # Step 3: Set up Buildx environment (enhanced Docker build engine)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Build and (conditionally) push the backend image
      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          # Relative path to the directory containing the backend Dockerfile
          context: ./simple-api
          # Defines tags for the image. Use the DockerHub username and an image name.
          # The 'latest' tag is common for the latest version.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          # Pushes the image to DockerHub ONLY if the workflow is on the 'main' branch.
          push: ${{ github.ref == 'refs/heads/main' }}

      # Step 5: Build and (conditionally) push the database image
      - name: Build and push database image
        uses: docker/build-push-action@v6
        with:
          # Relative path to the directory containing the database Dockerfile.
          context: ./database
          # Defines tags for the database image.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest # Suggested image name
          # Pushes the image to DockerHub ONLY if the workflow is on the 'main' branch.
          push: ${{ github.ref == 'refs/heads/main' }}

      # Step 6: Build and (conditionally) push the Apache server (httpd) image
      - name: Build and push httpd image
        uses: docker/build-push-action@v6
        with:
          # Relative path to the directory containing the Apache server Dockerfile.
          context: ./http-server
          # Defines tags for the Apache image.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest # Suggested image name
          # Pushes the image to DockerHub ONLY if the workflow is on the 'main' branch.
          push: ${{ github.ref == 'refs/heads/main' }}

  deploy:
    name: Deploy Application to Server
    runs-on: ubuntu-24.04 # Use the same runner as previous jobs
    needs: build-and-push-docker-image # This job depends on the success of building and pushing images
    if: github.ref == 'refs/heads/main' # Deploy only on the 'main' branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Ansible and Community Docker collection
        run: |
          python -m pip install --upgrade pip
          pip install ansible
          ansible-galaxy collection install community.docker

      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.ANSIBLE_INVENTORY_HOST }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Run Ansible Playbook to Deploy
        run: |
          ansible-playbook -i "${{ secrets.ANSIBLE_INVENTORY_HOST }}," \
            --private-key=~/.ssh/id_rsa \
            -u admin \
            playbook.yml
        working-directory: ./ansible # Corrected to `./ansible` to match your directory structure
        shell: bash
